# ID del proyecto de Google Cloud (lee de la variable de entorno PROJECT_ID)
google.cloud.project.id=${PROJECT_ID}

# Región de Vertex AI (lee de la variable de entorno VERTEX_LOCATION, o usa us-central1 por defecto)
google.cloud.vertex.location=${VERTEX_LOCATION:us-central1}

# Gemini API
gemini.api.endpoint=https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-001:generateContent
gemini.api.key=${GEMINI_API_KEY}

# Configuración para carga de archivos
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=60MB

# Configuracion de la base de datos
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/fitvision}

# Usuario y password (lee de variables de entorno o usa default local)
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:postgres}

# Hibernate
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# JWT
application.security.jwt.secret-key=${JWT_SECRET_KEY}
application.security.jwt.expiration=86400000

server.servlet.context-path=/api/v1


logging.level.org.springframework.security=DEBUG

mercadopago.access.token=${MERCADO_PAGO_ACCESS_TOKEN}


application.frontend.url=${FRONTEND_URL}
# Google OAuth2
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_OAUTH2_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_OAUTH2_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=${GOOGLE_OAUTH2_SCOPE}
